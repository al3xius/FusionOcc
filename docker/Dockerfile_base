FROM nvidia/cuda:11.3.1-devel-ubuntu20.04
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /setup
# 1. Install required system deps for Python 3.8
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    build-essential \
    g++ \
    gcc \
    libgl1-mesa-glx \
    libglib2.0-0 \
    openmpi-bin \
    openmpi-common \
    libopenmpi-dev \
    libgtk2.0-dev \
    git \
    libssl-dev \
    zlib1g-dev \
    libncurses5-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    libffi-dev \
    ca-certificates

# 2. Download, build, and install Python 3.8
RUN wget https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz && \
    tar -xf Python-3.8.18.tgz && \
    cd Python-3.8.18 && \
    ./configure --enable-optimizations && \
    make -j$(nproc) && \
    make altinstall && \
    cd .. && \
    rm -rf Python-3.8.18 Python-3.8.18.tgz

# 3. Symlink python & pip
RUN ln -s /usr/local/bin/python3.8 /usr/local/bin/python && \
    ln -s /usr/local/bin/pip3.8 /usr/local/bin/pip

# 4. Install large Dependencies
RUN pip install --no-cache-dir torch==1.11.0+cu113 torchvision==0.12.0+cu113 --extra-index-url https://download.pytorch.org/whl/cu113 && \
     pip install --no-cache-dir mmcv-full==1.6.0 -f https://download.openmmlab.com/mmcv/dist/cu11.3/torch1.10.0/index.html && \
     pip install --no-cache-dir mmdet==2.25.1 mmsegmentation==0.25.0 && \
     pip install --no-cache-dir torch-scatter==2.0.9

# 5. Install smaller Dependencies
RUN pip install --no-cache-dir pycuda lyft_dataset_sdk networkx==2.2 numba==0.55.2 numpy==1.21.6 nuscenes-devkit plyfile scikit-image \
     tensorboard trimesh==2.35.39 yapf==0.40.1 wandb

# Uninstall package for python build
RUN apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
